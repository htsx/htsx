"use strict";function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var events={},toAppend={};HTMLElement.prototype.addEventListenerProxy=HTMLElement.prototype.addEventListener,HTMLElement.prototype.addEventListener=function(e,t){this.addEventListenerProxy(e,t),this.listeners||(this.listeners=[]),this.listeners.push({event:e,handler:t})};var createListener=function(e,t,n){var r=e.getAttribute(t);r&&(e.removeAttribute(t),e.addEventListener(n,function(e){return events[r].call(e.target,e)}))},cloneNode=function t(e){var n=e.cloneNode(!1);return e.listeners&&e.listeners.forEach(function(t){n.addEventListener(t.event,function(e){return t.handler.call(e.target,e)})}),e.childNodes.length&&Array.from(e.childNodes).forEach(function(e){return n.appendChild(t(e))}),n},appendNodes=function(t){var e=t.getAttribute("data-append");e&&(t.removeAttribute("data-append"),Array.isArray(toAppend[e])?toAppend[e].forEach(function(e){"string"==typeof e?t.append(e):t.appendChild(cloneNode(e))}):t.appendChild(toAppend[e]),delete toAppend[e])},attachEvents=function t(e){var n="BODY"===e[0].parentElement.tagName?document.createElement("div"):e[0].parentElement;return Array.from(e).forEach(function(e){e.getAttribute&&(createListener(e,"onClick","click"),createListener(e,"onKeyPress","keypress"),createListener(e,"onKeyUp","keyup"),createListener(e,"onChange","onchange"),createListener(e,"onMouseOver","onmouseover"),createListener(e,"onMouseOut","onmouseout"),appendNodes(e)),e.childNodes.length&&t(e.childNodes),n.appendChild(e)}),n},index=function(e){for(var t=arguments.length,r=new Array(1<t?t-1:0),n=1;n<t;n++)r[n-1]=arguments[n];var o=e.map(function(e,t){var n=Date.now()+t;switch(_typeof(r[t])){case"function":return events[n]=r[t],"".concat(e).concat(n);case"object":return toAppend[n]=r[t],"".concat(e,'<div data-append="').concat(n,'"></div>');default:return"".concat(e).concat(r[t]||"")}}).join(""),a=(new DOMParser).parseFromString(o,"text/html").body.childNodes;return attachEvents(a)};module.exports=index;
